* Emacs

** How to input TeX style?

   - =C-\ RET TeX=, then =C-u C-\= to change it back (parsnip at
     Libera.chat)
   - [[https://github.com/clarkgrubb/latex-input][latex-input: Enter Unicode characters using LaTeX notation]] (grym
     at Libera.chat)

** How to open all files by pattern?

   #+begin_src shell
     emacs *.tex
   #+end_src

   #+begin_src shell
     emacs *.tex */*.tex
   #+end_src

   #+begin_src shell
     find . -iname \*tex -exec emacsclient {} +
   #+end_src

** How to highlight by word, line, or regex?

   - [[https://masteringemacs.org/article/highlighting-by-word-line-regexp][Highlighting by Word, Line and Regexp]]

** How to profile init / settings?

   - [[https://melpa.org/#/esup][The Emacs StartUp Profiler (ESUP)]]

** How to navigate back to part of a buffer?

   - Save point in register r =C-x r SPC r= (=point-to-register=),
     jump to position in register r =C-x r j r= (=jump-to-register=)
     (rpav at Libera.Chat)
   - Set a mark =C-SPC C-SPC=, then jump back =C-u C-SPC=
     (Desertcoffee at Libera.Chat)

** How to do collaborative editing with Emacs?

   - [[https://elpa.gnu.org/packages/crdt.html][GNU ELPA - crdt]]
   - [[https://corpix.dev/2022/02/collaborative-editing-with-emacs.html][Collaborative editing with Emacs]]
   - [[https://emacsconf.org/2021/talks/erg/][EmacsConf - 2021 - talks - Emacs Research Group, Season Zero]]

** How to have custom outlining and folding in Emacs?

   - Use =tree-sitter= if your expression is a programming language identifier
   - Use =origami= for general purpose folding, i.e., [[https://github.com/gregsexton/origami.el][GitHub -
     gregsexton/origami.el: A folding minor mode for Emacs]]
   - Change =imenu='s regular expressions, e.g., see =imenu-generic-expression=
     in [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Imenu.html][Imenu (GNU Emacs Lisp Reference Manual)]]
   - See more information about category folding [[http://emacswiki.org/wiki/CategoryFolding][EmacsWiki: Category Outline]]

   bpalmer at Libera.chat

** What are some good .emacs config files?

   - [[https://github.com/caisah/emacs.dz][GitHub - caisah/emacs.dz: Awesome emacs config files]]

** Emacs packages worth checking

   - [[https://github.com/emacs-tw/awesome-emacs][GitHub - emacs-tw/awesome-emacs: A community driven list of useful Emacs pack...]]
   - ripgrep
   - eshell
   - dired
   - mu4e
   - org-publish: for a website
   - org-roam

** Useful modes

   - [[https://ftp.gnu.org/pub/gnu/auctex/12.2-extra/tex-ref.pdf][AucTex reference card]]

* Org-mode

** What is the programming language identifier for a source block?

   See Tables 1 and 2 in [[https://orgmode.org/worg/org-contrib/babel/languages/index.html][Babel: Languages]].

** How to export/tangle automatically on commit?

   NB: =--batch= implies =-q=, hence initialization files are no
   loaded. Add =-l ~/.emacs=, =-l ~/.config/emacs/init.el= or similar.

   #+begin_src shell
     echo 'type emacs > /dev/null 2>&1 &&
	 emacs README.org --batch -f org-md-export-to-markdown --kill &&
	 git add README.md' >> .git/hooks/pre-commit && chmod +x .git/hooks/pre-commit
   #+end_src

   - [[https://git.sr.ht/~mplscorwin/org-git-hooks][~mplscorwin/org-git-hooks]]: automatically render code and
     documentation from org when you git commit
   - [[https://lists.gnu.org/r/bug-gnu-emacs/2021-12/msg00239.html][bug#12791: 24.2; An option to load user init file with -batch]]

** How to add a custom format to display a horizontal line in the buffer?

   Set up a custom font lock format by calling the function
   =font-lock-add-keywords=.

   #+begin_src elisp
     (add-hook 'org-mode-hook
          (lambda ()
            (font-lock-add-keywords
             nil
             '(("^-\\{5,\\}"  0 '(:foreground "green" :weight bold))))))
   #+end_src

   Source:
   - [[https://emacs.stackexchange.com/a/68708][How can I color horizontal lines in org mode? - Emacs Stack Exchange]]
   - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Font-Lock.html][Font Lock (GNU Emacs Manual)]]

** How to improve the look of an org-mode buffer?

   Use =org-modern= for a modern style via font locking and text properties.
   Consider also =org-superstar=, which has a reduced scope for headings and
   plain lists only.

   Source:
   - [[https://github.com/minad/org-modern][GitHub - minad/org-modern: Modern Org Style]]
   - [[https://github.com/integral-dw/org-superstar-mode][GitHub - integral-dw/org-superstar-mode: Make org-mode stars a little more super]]

** General resources

   - [[https://academia.stackexchange.com/questions/1273/use-cases-of-org-mode-as-a-scientific-productivity-tool-for-academics-without-pr][Use cases of org-mode as a scientific productivity tool for academics]]
   - [[https://github.com/fniessen/refcard-org-mode][Org-mode reference card]]

* Elisp

** Where to start with elisp?

   #+begin_src emacs-lisp
     (info "(eintr) Top")
   #+end_src
