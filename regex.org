* Regular expressions

  Gotta love them!

** How to match a keyword except when used as a tag?

   To match =foo= in any conex except when enclosed by brackets
   ={foo}=, use negative lookarounds but be careful to match ={foo=
   and =foo}=. Alternatively, use PCRE with =(*SKIP)(*F)|}=
   (OnlineCop at libera.chat). Other use cases for this pattern:
   exclude foo in comment lines (=#foo=, =//foo=, =/*foo*/=),
   quotes (="foo"=, ='foo'=).

   #+begin_src shell
     grep "(?<!\{)foo(?!\})"
     grep -P "\{foo\}(*SKIP)(*F)|foo"
   #+end_src

   Source:
   - https://regex101.com/r/9j9BVZ/1
   - https://regex101.com/r/gP0oMS/1

** How to match all R dependencies?

   Note the need to use single quotes around the regex and to double-escape the
   function call parenthesis to match, for example, =library(capturethis)=

   #+begin_src shell
     grep -Poh -r '(\w+)(?=::)|(?:library|require(?:Namespace)?)\\("?(\w+)"?\\)' --include="*\.R" | sort | uniq
   #+end_src

   Source:
   - https://regex101.com/r/XDsxbU/1

** How to match a custom file separator?

   I typically separate my file in labeled sections using this
   pattern: comment separator (one or more), space, label (can include
   space), space, at least four dash lines but typically enough to
   fill the column space. This can be matched with =\S+\s(.+?)\s-{4,}=

   #+begin_src ascii
;; Speed bar -------------------------------------------------------------------

%% Introduction ----------------------------------------------------------------

## Read data -------------------------------------------------------------------
   #+end_src

** How to match any number with decimals up to 10?

   #+begin_src ascii
     ^(?:\d|\d?\.\d+|10(?:\.0+)?)$
   #+end_src

   Source: [[https://regex101.com/r/kk8SIF/1/][https://regex101.com/r/kk8SIF/1/]]

** How to generate a string that matches a regular expression?
   A /regex to string/ kind of situation.

   - [[https://onlinestringtools.com/generate-string-from-regex][onlinestringtools]]: string from regex generator

** General resources

   - [[https://docs.microsoft.com/en-us/dotnet/standard/base-types/best-practices][Best practices for regular expressions]]
